// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// run_from_R
Rcpp::List run_from_R(Rcpp::S4 ParMaster, Rcpp::String dirpath);
RcppExport SEXP _RangeshiftR_run_from_R(SEXP ParMasterSEXP, SEXP dirpathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::S4 >::type ParMaster(ParMasterSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type dirpath(dirpathSEXP);
    rcpp_result_gen = Rcpp::wrap(run_from_R(ParMaster, dirpath));
    return rcpp_result_gen;
END_RCPP
}
// clear_outPop
void clear_outPop();
RcppExport SEXP _RangeshiftR_clear_outPop() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    clear_outPop();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RangeshiftR_run_from_R", (DL_FUNC) &_RangeshiftR_run_from_R, 2},
    {"_RangeshiftR_clear_outPop", (DL_FUNC) &_RangeshiftR_clear_outPop, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_RangeshiftR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
